{"version":3,"sources":["App.js","index.js"],"names":["List","require","AnswerRow","props","name","numbers","supplier","react_default","a","createElement","map","number","key","turn","className","correct","Numbers","actual","expected","Timer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ticks","state","left","tick","bind","assertThisInitialized","timer","setInterval","clearInterval","onTimeout","setState","_this$state","now","ProgressBar","Component","Current","onAnswer","App_Timer","role","aria-label","type","onClick","App","_this2","status","paused","current","answer","processAnswer","handleStop","Math","floor","random","fetchNext","_this$state2","push","_this3","next","generateNumber","fetch","headers","Accept","then","response","ok","Error","json","data","catch","error","console","log","currentPanel","_this$state3","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3cb0c7c3.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {ProgressBar} from \"react-bootstrap\";\nimport './App.css';\n\nconst {List} = require('immutable');\n\n\nfunction AnswerRow(props) {\n    const {name, numbers, supplier} = props;\n\n    return (\n        <tr>\n            <th>{name}</th>\n            {numbers.map(number => <td key={name + \".\" + number.turn} className={number.correct ? \"success\" : \"danger\"}>{supplier(number)}</td>)}\n            <td className=\"last-column\">{' '}</td>\n        </tr>\n    )\n}\n\n\nfunction Numbers(props) {\n    const {numbers} = props;\n\n    return (\n        <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">\n                <h3 className=\"panel-title\">Answers so far</h3>\n            </div>\n            <div className=\"panel-body number-container\">\n                <table className=\"table\">\n                    <tbody>\n                    <AnswerRow name=\"Number\" numbers={numbers} supplier={number => number.number} />\n                    <AnswerRow name=\"Answer\" numbers={numbers} supplier={number => number.actual} />\n                    <AnswerRow name=\"Correct\" numbers={numbers} supplier={number => number.expected} />\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nclass Timer extends Component {\n    constructor(props) {\n        super(props);\n        const {ticks} = props;\n\n        this.state = { left: ticks, ticks};\n\n        this.tick = this.tick.bind(this);\n    }\n\n    componentDidMount() {\n        this.timer = setInterval(this.tick, 100);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    tick() {\n        const left = this.state.left - 1;\n        if (left <= 0) {\n            this.props.onTimeout();\n        }\n\n        this.setState({left});\n    }\n\n    render() {\n        const {left, ticks} = this.state;\n        const now = 100 * left / ticks;\n\n        return <ProgressBar now={now} />;\n    }\n}\n\nfunction Current(props) {\n    const {number, onAnswer, onTimeout} = props;\n\n    return (\n        <div className=\"well\">\n            <Timer ticks={50} onTimeout={onTimeout}/>\n            <p>Current number: {number} </p>\n            <div className=\"btn-group\" role=\"group\" aria-label=\"...\">\n                <button type=\"button\" className=\"btn btn-default\" onClick={()=>onAnswer(\"Fizz\")}>Fizz</button>\n                <button type=\"button\" className=\"btn btn-default\" onClick={()=>onAnswer(\"Buzz\")}>Buzz</button>\n                <button type=\"button\" className=\"btn btn-default\" onClick={()=>onAnswer(\"FizzBuzz\")}>FizzBuzz</button>\n                <button type=\"button\" className=\"btn btn-default\" onClick={()=>onAnswer(number)}>{number}</button>\n            </div>\n        </div>\n    )\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            status: \"NOT_LOADED\",\n            paused: false,\n\n            numbers: new List(),\n\n            current: null,\n            answer: null,\n            turn: 0\n        };\n\n        this.processAnswer = this.processAnswer.bind(this);\n        this.onTimeout = this.onTimeout.bind(this);\n        this.handleStop = this.handleStop.bind(this);\n    }\n\n    generateNumber() {\n        return Math.floor(Math.random() * 101);\n    }\n\n    componentWillMount() {\n        this.fetchNext();\n    }\n\n    onTimeout() {\n        this.processAnswer(\"-\")\n    }\n\n    handleStop() {\n        const {paused} = this.state;\n\n        if (paused) {\n            this.fetchNext();\n        }\n\n        this.setState({paused: !paused})\n    }\n\n    processAnswer(answer) {\n        const {answer: expected, current, turn} = this.state;\n        let {numbers} = this.state;\n\n        const correct = answer == expected;\n        numbers = numbers.push({number: current, actual: answer, expected, correct, turn});\n\n        this.setState({\n            numbers,\n            turn: turn + 1\n        });\n\n        this.fetchNext();\n    }\n\n    fetchNext() {\n        this.setState({status: \"LOADING\"});\n\n        const next = this.generateNumber();\n\n        const updateEdits = (data) => this.setState({\n            current: data.number,\n            answer: data.response,\n            status: \"LOADED\"\n        });\n\n        fetch(\"/fizz?number=\" + next, {\n            headers: {\n                'Accept': 'application/json'\n            }\n        }).then(function(response) {\n            if (!response.ok) {\n                throw Error(response);\n            }\n            return response.json();\n        }).then(function(response) {\n            updateEdits(response)\n        }).catch(function(error) {\n            console.log(error);\n        });\n    }\n\n    render() {\n        const {status, numbers, current, paused} = this.state;\n\n        let currentPanel;\n\n        if (paused) {\n            currentPanel = <div className=\"well\">Not running</div>\n        }\n        else if (status === \"LOADED\") {\n            currentPanel = <Current key={current} number={current} onAnswer={this.processAnswer} onTimeout={this.onTimeout}/>\n        } else {\n            currentPanel = <div className=\"well\">Loading next number</div>\n        }\n\n        return (\n            <div className=\"App\">\n                <nav className=\"navbar navbar-default\">\n                    <div className=\"container-fluid\">\n                        <div className=\"navbar-header\">\n                            <div className=\"navbar-brand\">\n                                Fizz/Buzz\n                            </div>\n                            <div className=\"navbar-form navbar-left\">\n                                <button className=\"btn btn-default\" onClick={this.handleStop}>{paused ? \"Run\" : \"Stop\"}</button>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n                <div className=\"container-fluid\">\n                    <Numbers numbers={numbers}/>\n                    {currentPanel}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}